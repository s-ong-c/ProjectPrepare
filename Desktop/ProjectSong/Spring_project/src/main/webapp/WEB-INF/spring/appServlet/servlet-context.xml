<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
		<!-- DB 접속 정보를 가지고 있는 문서 읽어들이기 -->
	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>classpath:com/project/mypro/mybatis/db.properties
			</beans:value>
		</beans:property>
	</beans:bean>
	<!-- DataSource 설정 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<beans:property name="driverClass" value="${driver}" />
		<beans:property name="url" value="${url}" />
		<beans:property name="username" value="${username}" />
		<beans:property name="password" value="${password}" />
	</beans:bean> 
<!-- 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
    <property name="url" value="jdbc:log4jdbc:oracle:thin:localhost:8099:xe"/>오라클 엔터프라이즈급인 경우 xe대신 DB명을 넣는다
    <property name="username" value="scott1401"/>
    <property name="password" value="1234"/>
</bean> -->



	<!-- SqlSessionFactory 객체 -->
	<beans:bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:com/project/mypro/mybatis/Configuration.xml" />
	</beans:bean>
	
	<!-- 네이버 -->
	<beans:bean id="naverLoginBO" class="com.test.sts.NaverLoginBO" /> 
	
	
	<!-- Dao 에 주입해줄 SqlSession 인터페이스를 구현한 SqlSessionTemplate 객체 -->
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sessionFactory" />
	</beans:bean>

	<!-- 1월 30일 Transcation Manager 설정 -->
	<beans:bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- 1월30일 어노테이션으로 트렌젝션 처리 하도록 설정 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.mypro" />


	
	<context:component-scan base-package="com.test.sts" />
	
	
	
</beans:beans>
